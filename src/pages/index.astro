---
import { db } from "astro:db";
import Layout from "../layouts/Layout.astro";
import { Board } from "astro:db";
import { z } from "zod";
import Slugger from "github-slugger";

const form = await Astro.locals.form.getData({
  validator: { name: z.string() },
});
if (form?.fieldErrors) Astro.response.status = 400;

if (form?.data) {
  const slugs = await db
    .select({
      slug: Board.slug,
      // TODO: where user is something
    })
    .from(Board);

  const slugger = new Slugger();
  for (const { slug } of slugs) {
    slugger.occurrences[slug] ??= 0;
    slugger.occurrences[slug]++;
  }

  const { name } = form.data;
  const slug = slugger.slug(name);
  await db.insert(Board).values({
    name,
    slug,
  });
}
const boards = await db.select().from(Board);
---

<Layout title="Astrello | Boards">
  <h1>Boards</h1>
  <ul data-board-list>
    {
      boards.map((b) => (
        <li>
          <a href={b.slug}>{b.name}</a>
        </li>
      ))
    }
  </ul>

  <form method="POST">
    <input class="dark:bg-slate-800 rounded" type="text" name="name" />
    <button type="submit">Create</button>
  </form>
</Layout>

<script>
  import { controller, target } from "@github/catalyst";
  import { fetchHtml } from "../simple-rest";

  @controller
  class MyFormElement extends HTMLElement {
    @target form!: HTMLFormElement;

    connectedCallback() {
      this.form.addEventListener("submit", async (e) => {
        e.preventDefault();
        const { body } = await fetchHtml("/api/board", {
          method: "POST",
          body: new FormData(this.form),
        });
        this.form.reset();
        document.querySelector("[data-board-list]")!.replaceChildren(body);
      });
    }
  }
</script>
